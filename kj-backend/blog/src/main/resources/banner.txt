controller: 存放控制器类，处理 HTTP 请求并返回响应（例如 Spring MVC 中的 @RestController）
service: 存放服务类，包含业务逻辑。
repository 或 dao: 存放数据访问层类，直接与数据库交互（例如使用 Spring Data JPA 的 @Repository）。
model 或 entity: 存放实体类，通常映射到数据库表。
dto（Data Transfer Object）: 存放数据传输对象，用于在不同层之间传递数据。
vo（View Object）: 存放视图对象，用于将数据返回给客户端。
util： 存放工具类和通用的辅助方法。
exception： 存放自定义异常类。
com.example.projectname：遵循反向域名命名规则。
////////////////////////////////////////////////////////////////////
//                          _ooOoo_                               //
//                         o8888888o                              //
//                         88" . "88                              //
//                         (| ^_^ |)                              //
//                         O\  =  /O                              //
//                      ____/`---'\____                           //
//                    .'  \\|     |//  `.                         //
//                   /  \\|||  :  |||//  \                        //
//                  /  _||||| -:- |||||-  \                       //
//                  |   | \\\  -  /// |   |                       //
//                  | \_|  ''\---/''  |   |                       //
//                  \  .-\__  `-`  ___/-. /                       //
//                ___`. .'  /--.--\  `. . ___                     //
//              ."" '<  `.___\_<|>_/___.'  >'"".                  //
//            | | :  `- \`.;`\ _ /`;.`/ - ` : | |                 //
//            \  \ `-.   \_ __\ /__ _/   .-` /  /                 //
//      ========`-.____`-.___\_____/___.-`____.-'========         //
//                           `=---='                              //
//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        //
//              佛祖保佑       永无BUG     永不修改                  //
///////////////////////////////////////////////////////////////////